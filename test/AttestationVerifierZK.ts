import { ethers } from "hardhat";
import { expect } from "chai";
import { AbiCoder, Signer, ZeroAddress } from "ethers";
import * as attestation4533 from "../helpers/sample/risc0/attestation.json";
import * as attestation4534 from "../helpers/sample/risc0/attestation4534.json";

import {
  RiscZeroGroth16Verifier__factory,
  RiscZeroVerifierEmergencyStop,
  RiscZeroVerifierEmergencyStop__factory,
  AttestationVerifierZK,
  AttestationVerifierZK__factory,
  IRiscZeroVerifierRouter__factory,
  Risc0_attestation_verifier_wrapper__factory,
} from "../typechain-types";

describe("Attestation verifier for RISC0, testing", () => {
  let signers: Signer[];
  let admin: Signer;

  let attestationVerifierZK: AttestationVerifierZK;
  // let riscZeroVerifier: RiscZeroGroth16Verifier;

  let riscZeroVerifierEmergencyStop: RiscZeroVerifierEmergencyStop;

  beforeEach(async () => {
    signers = await ethers.getSigners();
    admin = signers[0];

    //Hardhat
    const riscZeroVerifier = await new RiscZeroGroth16Verifier__factory(admin).deploy(
      "0x8b6dcf11d463ac455361b41fb3ed053febb817491bdea00fdb340e45013b852e",
      "0x05a022e1db38457fb510bc347b30eb8f8cf3eda95587653d0eac19e1f10d164e",
    );

    riscZeroVerifierEmergencyStop = await new RiscZeroVerifierEmergencyStop__factory(admin).deploy(
      await riscZeroVerifier.getAddress(),
      await admin.getAddress(),
    );

    const _attestationVerifierZK = await new AttestationVerifierZK__factory(admin).deploy(await riscZeroVerifierEmergencyStop.getAddress());
    attestationVerifierZK = AttestationVerifierZK__factory.connect(await _attestationVerifierZK.getAddress(), admin);
    expect(attestationVerifierZK.getAddress()).to.not.eq(ZeroAddress);
  });

  it("Check verification on hardhat (4533 bytes)", async () => {
    let seal =
      "0x50bd17690fc93a31b96581f52f239398df9371f74911ab5e3d091635c64ec45984581cc61ac09b9dcc49da498801f6632b2bfd649d5233bb1cf11d9929c56aeca407449824612d2f596e36fa8f11a5f0403879582405cd079ab951c21820e75e6f16101b2b5cea06f6a903713ec4eb861aae32067b055de7ec1a498e9b44a472034ba3290e1ba95be9da41a533b7c8ebabdc87bc3a72d535d0963bc3576513337f26afca0358f2d9bb51e871bb479a0f358c4d13de21c8072b6ef2cc5adfa5adb87b4b0a2f94687025f3bd85b8d8d1e46919460f809348f0b11158990f2eda157b75ed1f26b3d1101276adec9085a4095110de700739128c4ae320a72e5d38d5d6eee755";
    let imageId = "0xbe8b537475a76008f0d8fc4257a6e79f98571aeaa12651598394ea18a0a3bfd6";
    // let journal_digest = "0xcd1b9da17add2f43e4feffed585dc72e07ebba44f7e10662630d986e1317e9dc";
    let journal_bytes =
      "0x00000192bd6ad011189038eccf28a3a098949e402f3b3d86a876f4915c5b02d546abb5d8c507ceb1755b8192d8cfca66e8f226160ca4c7a65d3938eb05288e20a981038b1861062ff4174884968a39aee5982b312894e60561883576cc7381d1a7d05b809936bd166c3ef363c488a9a86faa63a44653fd806e645d4540b40540876f3b811fc1bceecf036a4703f07587c501ee45bb56a1aa04fc0254eba608c1f36870e29ada90be46383292736e894bfff672d989444b5051e534a4b1f6dbe3c0bc581a32b7b176070ede12d69a3fea211b66e752cf7dd1dd095f6f1370f4170843d9dc100121e4cf63012809664487c9796284304dc53ff4e646f8b0071d5ba75931402522cc6a5c42a84a6fea238864e5ac9a0e12d83bd36d0c8109d3ca2b699fce8d082bf313f5d2ae249bb275b6b6e91e0fcd9262f4bb0000";

    const type_input = ["bytes", "bytes32", "bytes"];
    let proofBytes = new AbiCoder().encode(type_input, [seal, imageId, journal_bytes]);
    // console.log({ proofBytes });

    let attestation_object = attestation4533.attestation;
    const types = ["bytes", "bytes"];
    let verification_bytes = new AbiCoder().encode(types, [proofBytes, attestation_object]);
    // console.log({ verification_bytes });

    await expect(attestationVerifierZK["verify(bytes)"](verification_bytes)).to.not.reverted;
    // await expect(riscZeroVerifierEmergencyStop.verify(seal, imageId, journal_digest)).to.not.reverted;
  });

  it("Check verification on hardhat (4534 bytes)", async () => {
    let seal =
      "0x50bd17692b4b54e199336d39bde27d3db67b92550bd571e4c10e64e5b381a96e0ff3ce16273472f1c6535332870ca2449536cb137bf3d39c4e13df2c8a80d1e6bdcd1d9a20680e6b8e5ab136100d18a88165c538cf59511439119cefeb8c428d0a24491a0f4059d98620a9316742dd1830fcade4d36d62f502e8aadf1a3ee22db617f26c1df89b71df8ea83b337f0cf7def14082bd9eeaf5244acce9dadc0c350796b9f8290206e7c1df9aa9e1dcce16f8712188d1a4f97466192bff01001adae4da51932051a82262644a6243fcd18ad855076a8b940a1cb6cf78f9c9791f8b9ed7c98d250d87c1580c39800325f1c90e17328046e4b9918d7cf522998590eb581159e2";
    let imageId = "0x785ecdc7494dcdb0ee09574ad5554c79d8c6b99e8cb11dba5cf3c05a0e71d9ec";
    // let journal_digest = "0x1a7581588b40646c7d8e38aaf0dbccf21a39f0c12c7adfd3159595936a893eae";
    let journal_bytes =
      "0x000001930563c15a189038eccf28a3a098949e402f3b3d86a876f4915c5b02d546abb5d8c507ceb1755b8192d8cfca66e8f226160ca4c7a65d3938eb05288e20a981038b1861062ff4174884968a39aee5982b312894e60561883576cc7381d1a7d05b809936bd166c3ef363c488a9a86faa63a44653fd806e645d4540b40540876f3b811fc1bceecf036a4703f07587c501ee45bb56a1aa04fc0254eba608c1f36870e29ada90be46383292736e894bfff672d989444b5051e534a4b1f6dbe3c0bc581a32b7b176070ede12d69a3fea211b66e752cf7dd1dd095f6f1370f4170843d9dc100121e4cf63012809664487c9796284304dc53ff4e646f8b0071d5ba75931402522cc6a5c42a84a6fea238864e5ac9a0e12d83bd36d0c8109d3ca2b699fce8d082bf313f5d2ae249bb275b6b6e91e0fcd9262f4bb0000";

    const type_input = ["bytes", "bytes32", "bytes"];
    let proofBytes = new AbiCoder().encode(type_input, [seal, imageId, journal_bytes]);
    // console.log({ proofBytes });

    let attestation_object = attestation4534.attestation;
    const types = ["bytes", "bytes"];
    let verification_bytes = new AbiCoder().encode(types, [proofBytes, attestation_object]);
    // console.log({ verification_bytes });

    // await expect(attestationVerifierZK["verify(bytes)"](verification_bytes)).to.not.reverted;
    await attestationVerifierZK["verify(bytes)"](verification_bytes);
    // await expect(riscZeroVerifierEmergencyStop.verify(seal, imageId, journal_digest)).to.not.reverted;
  });

  it("Check verification on mainnet (4533 bytes)", async () => {
    let seal =
      "0x50bd17690fc93a31b96581f52f239398df9371f74911ab5e3d091635c64ec45984581cc61ac09b9dcc49da498801f6632b2bfd649d5233bb1cf11d9929c56aeca407449824612d2f596e36fa8f11a5f0403879582405cd079ab951c21820e75e6f16101b2b5cea06f6a903713ec4eb861aae32067b055de7ec1a498e9b44a472034ba3290e1ba95be9da41a533b7c8ebabdc87bc3a72d535d0963bc3576513337f26afca0358f2d9bb51e871bb479a0f358c4d13de21c8072b6ef2cc5adfa5adb87b4b0a2f94687025f3bd85b8d8d1e46919460f809348f0b11158990f2eda157b75ed1f26b3d1101276adec9085a4095110de700739128c4ae320a72e5d38d5d6eee755";
    let imageId = "0xbe8b537475a76008f0d8fc4257a6e79f98571aeaa12651598394ea18a0a3bfd6";
    let journal_digest = "0xcd1b9da17add2f43e4feffed585dc72e07ebba44f7e10662630d986e1317e9dc";

    const provider = new ethers.JsonRpcProvider("https://eth.llamarpc.com");
    let riscZeroVerifierRouter = IRiscZeroVerifierRouter__factory.connect("0x8EaB2D97Dfce405A1692a21b3ff3A172d593D319", provider);

    await expect(riscZeroVerifierRouter.verify(seal, imageId, journal_digest)).to.not.reverted;
  });

  it("Check verification on mainnet (4534 bytes)", async () => {
    let seal =
      "0x50bd17692b4b54e199336d39bde27d3db67b92550bd571e4c10e64e5b381a96e0ff3ce16273472f1c6535332870ca2449536cb137bf3d39c4e13df2c8a80d1e6bdcd1d9a20680e6b8e5ab136100d18a88165c538cf59511439119cefeb8c428d0a24491a0f4059d98620a9316742dd1830fcade4d36d62f502e8aadf1a3ee22db617f26c1df89b71df8ea83b337f0cf7def14082bd9eeaf5244acce9dadc0c350796b9f8290206e7c1df9aa9e1dcce16f8712188d1a4f97466192bff01001adae4da51932051a82262644a6243fcd18ad855076a8b940a1cb6cf78f9c9791f8b9ed7c98d250d87c1580c39800325f1c90e17328046e4b9918d7cf522998590eb581159e2";
    let imageId = "0x785ecdc7494dcdb0ee09574ad5554c79d8c6b99e8cb11dba5cf3c05a0e71d9ec";
    let journal_digest = "0x1a7581588b40646c7d8e38aaf0dbccf21a39f0c12c7adfd3159595936a893eae";

    const provider = new ethers.JsonRpcProvider("https://eth.llamarpc.com");
    let riscZeroVerifierRouter = IRiscZeroVerifierRouter__factory.connect("0x8EaB2D97Dfce405A1692a21b3ff3A172d593D319", provider);

    await expect(riscZeroVerifierRouter.verify(seal, imageId, journal_digest)).to.not.reverted;
  });

  it("Check verification on arbitrum sepolia (4533 bytes)", async () => {
    let seal =
      "0x50bd17690fc93a31b96581f52f239398df9371f74911ab5e3d091635c64ec45984581cc61ac09b9dcc49da498801f6632b2bfd649d5233bb1cf11d9929c56aeca407449824612d2f596e36fa8f11a5f0403879582405cd079ab951c21820e75e6f16101b2b5cea06f6a903713ec4eb861aae32067b055de7ec1a498e9b44a472034ba3290e1ba95be9da41a533b7c8ebabdc87bc3a72d535d0963bc3576513337f26afca0358f2d9bb51e871bb479a0f358c4d13de21c8072b6ef2cc5adfa5adb87b4b0a2f94687025f3bd85b8d8d1e46919460f809348f0b11158990f2eda157b75ed1f26b3d1101276adec9085a4095110de700739128c4ae320a72e5d38d5d6eee755";
    let imageId = "0xbe8b537475a76008f0d8fc4257a6e79f98571aeaa12651598394ea18a0a3bfd6";
    let journal_digest = "0xcd1b9da17add2f43e4feffed585dc72e07ebba44f7e10662630d986e1317e9dc";

    const provider = new ethers.JsonRpcProvider("https://sepolia-rollup.arbitrum.io/rpc");
    let riscZeroVerifierRouter = IRiscZeroVerifierRouter__factory.connect("0x0b144e07a0826182b6b59788c34b32bfa86fb711", provider);

    await expect(riscZeroVerifierRouter.verify(seal, imageId, journal_digest)).to.not.reverted;
  });

  it("Check verification on arbitrum sepolia (4534 bytes)", async () => {
    let seal =
      "0x50bd17692b4b54e199336d39bde27d3db67b92550bd571e4c10e64e5b381a96e0ff3ce16273472f1c6535332870ca2449536cb137bf3d39c4e13df2c8a80d1e6bdcd1d9a20680e6b8e5ab136100d18a88165c538cf59511439119cefeb8c428d0a24491a0f4059d98620a9316742dd1830fcade4d36d62f502e8aadf1a3ee22db617f26c1df89b71df8ea83b337f0cf7def14082bd9eeaf5244acce9dadc0c350796b9f8290206e7c1df9aa9e1dcce16f8712188d1a4f97466192bff01001adae4da51932051a82262644a6243fcd18ad855076a8b940a1cb6cf78f9c9791f8b9ed7c98d250d87c1580c39800325f1c90e17328046e4b9918d7cf522998590eb581159e2";
    let imageId = "0x785ecdc7494dcdb0ee09574ad5554c79d8c6b99e8cb11dba5cf3c05a0e71d9ec";
    let journal_digest = "0x1a7581588b40646c7d8e38aaf0dbccf21a39f0c12c7adfd3159595936a893eae";

    const provider = new ethers.JsonRpcProvider("https://sepolia-rollup.arbitrum.io/rpc");
    let riscZeroVerifierRouter = IRiscZeroVerifierRouter__factory.connect("0x0b144e07a0826182b6b59788c34b32bfa86fb711", provider);

    await expect(riscZeroVerifierRouter.verify(seal, imageId, journal_digest)).to.not.reverted;
  });

  it.only("Check Wrapper on arbitrum sepolia", async () => {
    const inputCalldata =
      "0x0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000122000000000000000000000000000000000000000000000000000000000000011b58444a1013822a0591149a9696d6f64756c655f69647827692d30663163643737643337666438626363392d656e633031386537616136316532303430666666646967657374665348413338346974696d657374616d701b00000192bd6ad0116470637273b0005830189038eccf28a3a098949e402f3b3d86a876f4915c5b02d546abb5d8c507ceb1755b8192d8cfca66e8f226160ca4c7a60158305d3938eb05288e20a981038b1861062ff4174884968a39aee5982b312894e60561883576cc7381d1a7d05b809936bd160258306c3ef363c488a9a86faa63a44653fd806e645d4540b40540876f3b811fc1bceecf036a4703f07587c501ee45bb56a1aa03583000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004583045ff8769d16a46d16fcf4b872b546b02d587267a16d2325fb968453c0e36e243d04389e45466191967ceb1978012a9cfa58300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b58300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c58300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d58300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e58300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f58300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006b63657274696669636174655902813082027d30820203a0030201020210018e7aa61e2040ff000000006719da04300a06082a8648ce3d04030330818f310b30090603550406130255533113301106035504080c0a57617368696e67746f6e3110300e06035504070c0753656174746c65310f300d060355040a0c06416d617a6f6e310c300a060355040b0c03415753313a303806035504030c31692d30663163643737643337666438626363392e61702d736f7574682d312e6177732e6e6974726f2d656e636c61766573301e170d3234313032343035323431375a170d3234313032343038323432305a308194310b30090603550406130255533113301106035504080c0a57617368696e67746f6e3110300e06035504070c0753656174746c65310f300d060355040a0c06416d617a6f6e310c300a060355040b0c03415753313f303d06035504030c36692d30663163643737643337666438626363392d656e63303138653761613631653230343066662e61702d736f7574682d312e6177733076301006072a8648ce3d020106052b8104002203620004ebd998e0b89cf4ab60ff8b83964ae06d0374edd605cb7972a473659eaf7e94cf72ce1078bcfe4aabf6e6a88296c1a7f8e180f596c5b204fa1e203b7231c4d943d6e13380500dc7ce1e11ab50e09d476a969c3ae3857d74b12e7e1737425ab75ba31d301b300c0603551d130101ff04023000300b0603551d0f0404030206c0300a06082a8648ce3d04030303680030650230024a14bc4504662b9af0afd57c4753ec82b054728faba6c9098bec17151f14f81bce1ac5e0055b26a8e4e90df796b74d023100954521c1a6eb548d9e32395e02378ff13533ce17693cc348d152a89fd385268747524ebe7039c3d7b58839e12e38940a68636162756e646c65845902153082021130820196a003020102021100f93175681b90afe11d46ccb4e4e7f856300a06082a8648ce3d0403033049310b3009060355040613025553310f300d060355040a0c06416d617a6f6e310c300a060355040b0c03415753311b301906035504030c126177732e6e6974726f2d656e636c61766573301e170d3139313032383133323830355a170d3439313032383134323830355a3049310b3009060355040613025553310f300d060355040a0c06416d617a6f6e310c300a060355040b0c03415753311b301906035504030c126177732e6e6974726f2d656e636c617665733076301006072a8648ce3d020106052b8104002203620004fc0254eba608c1f36870e29ada90be46383292736e894bfff672d989444b5051e534a4b1f6dbe3c0bc581a32b7b176070ede12d69a3fea211b66e752cf7dd1dd095f6f1370f4170843d9dc100121e4cf63012809664487c9796284304dc53ff4a3423040300f0603551d130101ff040530030101ff301d0603551d0e041604149025b50dd90547e796c396fa729dcf99a9df4b96300e0603551d0f0101ff040403020186300a06082a8648ce3d0403030369003066023100a37f2f91a1c9bd5ee7b8627c1698d255038e1f0343f95b63a9628c3d39809545a11ebcbf2e3b55d8aeee71b4c3d6adf3023100a2f39b1605b27028a5dd4ba069b5016e65b4fbde8fe0061d6a53197f9cdaf5d943bc61fc2beb03cb6fee8d2302f3dff65902c3308202bf30820246a003020102021100d48b0a8617f1e072681f232abd4f9275300a06082a8648ce3d0403033049310b3009060355040613025553310f300d060355040a0c06416d617a6f6e310c300a060355040b0c03415753311b301906035504030c126177732e6e6974726f2d656e636c61766573301e170d3234313032333039323535345a170d3234313131323130323535345a3065310b3009060355040613025553310f300d060355040a0c06416d617a6f6e310c300a060355040b0c034157533137303506035504030c2e363065633666363432376439316336622e61702d736f7574682d312e6177732e6e6974726f2d656e636c617665733076301006072a8648ce3d020106052b8104002203620004e9ca6ac9dbea21183e6922ab22849e9aff2670c9fa2c0864976f13862b9764dfe8a71e174f2c17b5376fc38b7638029d8b672a6769d109c8355bc8a00b7ed7f9f4f209b7ff09e70c07425119b19d3ab16927ca00247148e8f83adcb897faee55a381d53081d230120603551d130101ff040830060101ff020102301f0603551d230418301680149025b50dd90547e796c396fa729dcf99a9df4b96301d0603551d0e04160414b2bf4e5dc092b576ddfdfb3c178ac358285beef8300e0603551d0f0101ff040403020186306c0603551d1f046530633061a05fa05d865b687474703a2f2f6177732d6e6974726f2d656e636c617665732d63726c2e73332e616d617a6f6e6177732e636f6d2f63726c2f61623439363063632d376436332d343262642d396539662d3539333338636236376638342e63726c300a06082a8648ce3d040303036700306402306fba93b8f32fe3a514d6046fbb61764363791391103fb3a46ecbecb2cd0cd3fde7491d622a1b3917952a48df3a1ad74102304960c526cf58768ebc184bcf8f9c28f7a107edc74dd9a41ee647277563b143a471f347e9065a2e16f75bfd87c48a8de859031b308203173082029ea0030201020210430f67755bb1a54a13f9a4e07fca047c300a06082a8648ce3d0403033065310b3009060355040613025553310f300d060355040a0c06416d617a6f6e310c300a060355040b0c034157533137303506035504030c2e363065633666363432376439316336622e61702d736f7574682d312e6177732e6e6974726f2d656e636c61766573301e170d3234313032333139333034395a170d3234313032393230333034385a30818a313d303b06035504030c34393433643266393066343162656238382e7a6f6e616c2e61702d736f7574682d312e6177732e6e6974726f2d656e636c61766573310c300a060355040b0c03415753310f300d060355040a0c06416d617a6f6e310b3009060355040613025553310b300906035504080c0257413110300e06035504070c0753656174746c653076301006072a8648ce3d020106052b81040022036200046f3895431f71c59787f7744d0bf178d40ddbd8c915889fdc312ffa70c199b6aae7a6118e201822e3671fcbcfba536a45a9c407cb626d20a68c1a7f92a0365004be7205d32482a582499824165f44e600aa33c952e65e7ee48e81988c15494d01a381ec3081e930120603551d130101ff040830060101ff020101301f0603551d23041830168014b2bf4e5dc092b576ddfdfb3c178ac358285beef8301d0603551d0e041604144fec4411d6ee6c35991c2c62ec3e0a03b7ba7537300e0603551d0f0101ff0404030201863081820603551d1f047b30793077a075a0738671687474703a2f2f63726c2d61702d736f7574682d312d6177732d6e6974726f2d656e636c617665732e73332e61702d736f7574682d312e616d617a6f6e6177732e636f6d2f63726c2f33393936303562622d326338392d343835382d383765392d3632353833346463353165652e63726c300a06082a8648ce3d040303036700306402307017f589d65385b69f02e410ba78c2e4f75f1f0deb1aa924dc0b3742c6570f70d95b3721e279351c838a64a3f8a9275a02303f794d5bd60168d19ae16b0e21125b7e46b3a8b3383cbc4432cb01758029ad0b28e8d517ec7c68df48ca5a653e43b28e5902c6308202c230820247a003020102021500ef105e145771b70ef0b994908c65f1d0ed537fca300a06082a8648ce3d04030330818a313d303b06035504030c34393433643266393066343162656238382e7a6f6e616c2e61702d736f7574682d312e6177732e6e6974726f2d656e636c61766573310c300a060355040b0c03415753310f300d060355040a0c06416d617a6f6e310b3009060355040613025553310b300906035504080c0257413110300e06035504070c0753656174746c65301e170d3234313032343031353235315a170d3234313032353031353235315a30818f310b30090603550406130255533113301106035504080c0a57617368696e67746f6e3110300e06035504070c0753656174746c65310f300d060355040a0c06416d617a6f6e310c300a060355040b0c03415753313a303806035504030c31692d30663163643737643337666438626363392e61702d736f7574682d312e6177732e6e6974726f2d656e636c617665733076301006072a8648ce3d020106052b81040022036200042a30ab9f5d85987d53bfb07157545c67c60d81dc57c4d02df40cd2d043f03791ec3aa82b20a240495be4f99c75f1c814a5d137d620338c5c4290a8de797086a8ede82f10aa3331d69230f11aa9915f10e60ee991c679b46819033ca4a27c8eaba366306430120603551d130101ff040830060101ff020100300e0603551d0f0101ff040403020204301d0603551d0e04160414282cb45dc3353f695ba02779e7bc842d6dde3b98301f0603551d230418301680144fec4411d6ee6c35991c2c62ec3e0a03b7ba7537300a06082a8648ce3d04030303690030660231008722ac2d80a09c538c2768ef21e072b29c99f90e537c075adbbc2aad68b89c5bb5ecb22177e9a64c0a3440f00a549de902310093b2fd8d563fae1b117810ef50854d5eac6391d60612b8330968e7f1f9ae0bd820e65c920905ab98431114e5612fc9016a7075626c69635f6b65795840e646f8b0071d5ba75931402522cc6a5c42a84a6fea238864e5ac9a0e12d83bd36d0c8109d3ca2b699fce8d082bf313f5d2ae249bb275b6b6e91e0fcd9262f4bb69757365725f64617461f6656e6f6e6365f65860b9d35b87623d7da936958390645b4b197404a4d316d46693c921d95353eac8cf2892c85f74fa79881c77e0d4075b7b9769981b1461427d569f7391b9cd219b36c1250655c9dd2e00d34aaec94bc1bd2aadc7669ba3a5fa54e5c09af52648ff6e000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000060be8b537475a76008f0d8fc4257a6e79f98571aeaa12651598394ea18a0a3bfd600000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000000000000000000000000000000000000000010450bd17690fc93a31b96581f52f239398df9371f74911ab5e3d091635c64ec45984581cc61ac09b9dcc49da498801f6632b2bfd649d5233bb1cf11d9929c56aeca407449824612d2f596e36fa8f11a5f0403879582405cd079ab951c21820e75e6f16101b2b5cea06f6a903713ec4eb861aae32067b055de7ec1a498e9b44a472034ba3290e1ba95be9da41a533b7c8ebabdc87bc3a72d535d0963bc3576513337f26afca0358f2d9bb51e871bb479a0f358c4d13de21c8072b6ef2cc5adfa5adb87b4b0a2f94687025f3bd85b8d8d1e46919460f809348f0b11158990f2eda157b75ed1f26b3d1101276adec9085a4095110de700739128c4ae320a72e5d38d5d6eee75500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000013b00000192bd6ad011189038eccf28a3a098949e402f3b3d86a876f4915c5b02d546abb5d8c507ceb1755b8192d8cfca66e8f226160ca4c7a65d3938eb05288e20a981038b1861062ff4174884968a39aee5982b312894e60561883576cc7381d1a7d05b809936bd166c3ef363c488a9a86faa63a44653fd806e645d4540b40540876f3b811fc1bceecf036a4703f07587c501ee45bb56a1aa04fc0254eba608c1f36870e29ada90be46383292736e894bfff672d989444b5051e534a4b1f6dbe3c0bc581a32b7b176070ede12d69a3fea211b66e752cf7dd1dd095f6f1370f4170843d9dc100121e4cf63012809664487c9796284304dc53ff4e646f8b0071d5ba75931402522cc6a5c42a84a6fea238864e5ac9a0e12d83bd36d0c8109d3ca2b699fce8d082bf313f5d2ae249bb275b6b6e91e0fcd9262f4bb00000000000000";

    const provider = new ethers.JsonRpcProvider("https://sepolia-rollup.arbitrum.io/rpc");
    let attestionProofWrapper = Risc0_attestation_verifier_wrapper__factory.connect("0x8C9B044F1c2c150a068012016836330250C67951", provider);

    await expect(attestionProofWrapper.verify(inputCalldata)).to.not.reverted;
  });
});
